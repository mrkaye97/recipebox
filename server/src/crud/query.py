# Code generated by sqlc. DO NOT EDIT.
# versions:
#   sqlc v1.28.0
# source: query.sql
import uuid

import sqlalchemy
import sqlalchemy.ext.asyncio

from src.crud import models

FIND_USER_BY_ID = """-- name: find_user_by_id \\:one
SELECT id, username, email, name, created_at, updated_at
FROM "user"
WHERE id = :p1
"""


class AsyncQuerier:
    def __init__(self, conn: sqlalchemy.ext.asyncio.AsyncConnection):
        self._conn = conn

    async def find_user_by_id(self, *, userid: uuid.UUID) -> models.User | None:
        row = (
            await self._conn.execute(sqlalchemy.text(FIND_USER_BY_ID), {"p1": userid})
        ).first()
        if row is None:
            return None
        return models.User(
            id=row[0],
            username=row[1],
            email=row[2],
            name=row[3],
            created_at=row[4],
            updated_at=row[5],
        )
