# Code generated by sqlc. DO NOT EDIT.
# versions:
#   sqlc v1.28.0
# source: activity.sql
import datetime
import uuid
from collections.abc import AsyncIterator
from typing import Any

import pydantic
import sqlalchemy
import sqlalchemy.ext.asyncio

LIST_RECENT_RECIPE_COOKS = """-- name: list_recent_recipe_cooks \\:many
WITH recipes_cooked AS (
    SELECT user_id, recipe_id, cooked_at
    FROM recipe_cooking_log
    WHERE user_id = :p1\\:\\:UUID
    ORDER BY cooked_at DESC
    LIMIT :p3\\:\\:INT
    OFFSET :p2\\:\\:INT
)

SELECT r.id, r.user_id, r.name, r.author, r.cuisine, r.location, r.time_estimate_minutes, r.notes, r.last_made_at, r.created_at, r.updated_at, rc.cooked_at
FROM recipes_cooked rc
JOIN recipe r ON r.id = rc.recipe_id
ORDER BY rc.cooked_at DESC
"""


class ListRecentRecipeCooksRow(pydantic.BaseModel):
    id: uuid.UUID
    user_id: uuid.UUID
    name: str
    author: str
    cuisine: str
    location: Any
    time_estimate_minutes: int
    notes: str | None
    last_made_at: datetime.datetime | None
    created_at: datetime.datetime
    updated_at: datetime.datetime
    cooked_at: datetime.datetime


class AsyncQuerier:
    def __init__(self, conn: sqlalchemy.ext.asyncio.AsyncConnection):
        self._conn = conn

    async def list_recent_recipe_cooks(
        self, *, userid: uuid.UUID, recentcooksoffset: int, recentcookslimit: int
    ) -> AsyncIterator[ListRecentRecipeCooksRow]:
        result = await self._conn.stream(
            sqlalchemy.text(LIST_RECENT_RECIPE_COOKS),
            {"p1": userid, "p2": recentcooksoffset, "p3": recentcookslimit},
        )
        async for row in result:
            yield ListRecentRecipeCooksRow(
                id=row[0],
                user_id=row[1],
                name=row[2],
                author=row[3],
                cuisine=row[4],
                location=row[5],
                time_estimate_minutes=row[6],
                notes=row[7],
                last_made_at=row[8],
                created_at=row[9],
                updated_at=row[10],
                cooked_at=row[11],
            )
