# Code generated by sqlc. DO NOT EDIT.
# versions:
#   sqlc v1.28.0
import datetime
import enum
import uuid
from typing import Any

import pydantic


class DietaryRestriction(str, enum.Enum):
    GLUTEN_FREE = "gluten_free"
    DAIRY_FREE = "dairy_free"
    NUT_FREE = "nut_free"
    VEGAN = "vegan"
    VEGETARIAN = "vegetarian"
    PESCATARIAN = "pescatarian"


class FriendshipStatus(str, enum.Enum):
    PENDING = "pending"
    ACCEPTED = "accepted"


class UserPrivacyPreference(str, enum.Enum):
    PUBLIC = "public"
    PRIVATE = "private"


class CookingHistory(pydantic.BaseModel):
    recipe_id: uuid.UUID
    user_id: uuid.UUID
    made_at: datetime.datetime
    created_at: datetime.datetime
    updated_at: datetime.datetime


class Friendship(pydantic.BaseModel):
    user_id: uuid.UUID
    friend_user_id: uuid.UUID
    status: FriendshipStatus
    created_at: datetime.datetime
    updated_at: datetime.datetime


class Recipe(pydantic.BaseModel):
    id: uuid.UUID
    user_id: uuid.UUID
    name: str
    author: str
    cuisine: str
    location: Any
    time_estimate_minutes: int
    notes: str | None
    last_made_at: datetime.datetime | None
    created_at: datetime.datetime
    updated_at: datetime.datetime


class RecipeDietaryRestrictionMet(pydantic.BaseModel):
    user_id: uuid.UUID
    recipe_id: uuid.UUID
    dietary_restriction: DietaryRestriction


class RecipeIngredient(pydantic.BaseModel):
    recipe_id: uuid.UUID
    user_id: uuid.UUID
    name: str
    quantity: float
    units: str
    created_at: datetime.datetime
    updated_at: datetime.datetime


class RecipeInstruction(pydantic.BaseModel):
    recipe_id: uuid.UUID
    user_id: uuid.UUID
    step_number: int
    content: str
    created_at: datetime.datetime
    updated_at: datetime.datetime


class RecipeTag(pydantic.BaseModel):
    user_id: uuid.UUID
    recipe_id: uuid.UUID
    tag: str


class SchemaMigration(pydantic.BaseModel):
    version: str


class User(pydantic.BaseModel):
    id: uuid.UUID
    email: str
    name: str
    created_at: datetime.datetime
    updated_at: datetime.datetime
    privacy_preference: UserPrivacyPreference


class UserPassword(pydantic.BaseModel):
    user_id: uuid.UUID
    password_hash: str
    created_at: datetime.datetime
    updated_at: datetime.datetime
